logLevel=6  ; global log level override. 4=WARNING, 5=NOTICE, 6=INFO, 7=DEBUG. default is NOTICE.

[tools]
toolIds=gcc_cpp,gcc_c,clang39_c,clang39_cpp
; several aliases example
gcc_c=/usr/bin/gcc,gcc    
gcc_cpp=/usr/bin/g++,g++

;varaible example. Variables scope is from definition to the end of the file.
LOCAL_BIN:=/usr/local/bin
clang39_c=$LOCAL_BIN/clang-3.9
clang39_cpp=$LOCAL_BIN/clang-3.9++

; cross-compilation options. This argument appended to all remote invocations.
clang39_c_append=--target=x86_64-unknown-linux-gnu
clang39_cpp_append=--target=x86_64-unknown-linux-gnu

[toolClient]
coordinatorHost=localhost
coordinatorPort=7767
; minimal tool invocation requred to use remote server. Obviously, 1-5 requests faster to execute locally.
minimalRemoteTasks=10
; timeout of request before sending to any tool server.
queueTimeoutMS=10000
; full network timeout. If you recieving "Timeout expired error", you could raise it.
requestTimeoutMS=240000

[coordinator]
listenPort=7767

[toolServer]
serverName=gcc_worker
; how many jobs will be executed concurrently.
threadCount=4
listenHost=localhost
listenPort=7765
coordinatorHost=localhost
coordinatorPort=7767

; custom compression options
compressionType=Gzip
compressionLevel=5

; on Linux, we could use syslog instead of default stderr logging. On other systems option has no effect.
logToSyslog=true

[proxy]
listenPort=7779
toolId=gcc_cpp
logLevel=5
; default is 4 minutes. But you could raise it.
proxyClientTimeoutMS=240000

;log options can be overrided in any group: toolClient, coordinator, toolServer or proxy.
; use file logging 
logToFile=true
logDir=/var/log/Wuild/
; log format options:
outputTimestamp=true
outputTimeoffsets=true
outputLoglevel=true
; log rotation options:
maxMessagesInFile=100000
maxFilesInDir=10
